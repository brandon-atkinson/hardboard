import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.0.RELEASE")
    }
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'application'

targetCompatibility = 1.7

mainClassName = 'com.acknsyn.hardboard.Application'
jar {
    manifest {
        attributes 'Main-Class':mainClassName
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.4.0'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'com.h2database:h2:1.4.185'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

processResources {
    from('src/main/resources') {
        include 'application.properties'
        filter(ReplaceTokens, tokens: [
                JAVA_VERSION : System.properties['java.version'] ?: "",
                OS_NAME : System.properties['OS_NAME'] ?: "",
                JAVA_CLASSPATH : System.properties['java.class.path'] ?: "",
                JAVA_VENDOR : System.properties['java.vendor'] ?: "",
                BUILD_NUMBER : System.getenv('BUILD_NUMBER') ?: "",
                BUILD_ID : System.getenv('BUILD_ID') ?: "",
                JOB_NAME : System.getenv('JOB_NAME') ?: "",
                BUILD_TAG : System.getenv('BUILD_TAG') ?: "",
                EXECUTOR_NUMBER : System.getenv('EXECUTOR_NUMBER') ?: "",
                JAVA_HOME : System.getenv('JAVA_HOME') ?: "",
                WORKSPACE : System.getenv('WORKSPACE') ?: "",
                GIT_BRANCH : System.getenv('GIT_BRANCH') ?: "",
                GIT_COMMIT : System.getenv('GIT_COMMIT') ?: "",
                GIT_PREVIOUS_COMMIT : System.getenv('GIT_PREVIOUS_COMMIT') ?: "",
                PROJECT_VERSION : System.getenv('BUILD_NUMBER') ?: ""
        ])
    }

}

applicationDistribution.from('src/main/scripts') {
    include 'appspec.yml' into '/'
    include 'install_dependencies' into '/'
    include 'start_server' into '/'
    include 'stop_server' into '/'
}


